a <- c(1, 2, 3)
b <- c(4, 5, 6)
c <- c(7, 8, 9)
matrix_combination <- cbind(a, b, c)
print(matrix_combination)
numeric_vector <- c(1.5, 2.7, 3.0)
character_vector <- c("apple", "banana", "orange")
logical_vector <- c(TRUE, FALSE, TRUE)
cat("Numeric Vector: ", numeric_vector, "\n")
cat("Character Vector: ", character_vector, "\n")
cat("Logical Vector: ", logical_vector, "\n")
cat("Type of Numeric Vector: ", typeof(numeric_vector), "\n")
cat("Type of Character Vector: ", typeof(character_vector), "\n")
cat("Type of Logical Vector: ", typeof(logical_vector), "\n")
matrix_rows <- matrix(1:20, nrow = 5, ncol = 4, byrow = TRUE)
rownames(matrix_rows) <- c("Row1", "Row2", "Row3", "Row4", "Row5")
colnames(matrix_rows) <- c("Col1", "Col2", "Col3", "Col4")
print("Matrix Filled by Rows:")
print(matrix_rows)
matrix_rows_labels <- matrix(21:29, nrow = 3, ncol = 3, byrow = TRUE,
dimnames = list(c("RowA", "RowB", "RowC"), c("ColX", "ColY", "ColZ")))
print("\nLabeled Matrix Filled by Rows:")
print(matrix_rows_labels)
matrix_columns_labels <- matrix(31:34, nrow = 2, ncol = 2, byrow = FALSE,
dimnames = list(c("RowP", "RowQ"), c("ColM", "ColN")))
print("\nLabeled Matrix Filled by Columns:")
print(matrix_columns_labels)
values_vector <- c(1, 2, 3, 4, 5, 6, 7, 8)
dimensions_vector <- c(2, 2, 2)  # 3-dimensional array with dimensions 2x2x2
dimnames_list <- list(
c("Row1", "Row2"),
c("ColA", "ColB"),
c("DepthX", "DepthY")
)
my_array <- array(values_vector, dim = dimensions_vector, dimnames = dimnames_list)
print("Array:")
print(my_array)
savehistory("~/GitHub/charan/week2.Rhistory")
vector1 <- c(1, 2, 3)
vector2 <- c(4, 5, 6)
vector3 <- c(7, 8, 9)
combined_matrix <- rbind(vector1, vector2, vector3)
my_array <- array(data = c(combined_matrix, combined_matrix * 2),
dim = c(3, 3, 2),
dimnames = list(NULL, NULL, c("Table1", "Table2")))
print("Array:")
print(my_array)
numeric_vector <- c(1, 2, 3)
character_vector <- c("apple", "banana", "orange")
logical_vector <- c(TRUE, FALSE, TRUE)
matrix_example <- matrix(4:15, nrow = 3, ncol = 4)
custom_function <- function(x) {
return(x * 2)
}
my_list <- list(
numeric_vector,
character_vector,
logical_vector,
matrix_example,
custom_function
)
print("Content of the List:")
print(my_list)
subjects <- c("Math", "English", "Science", "History", "Art")
marks <- c(80, 75, 90, 85, 70)
barplot(marks, names.arg = subjects, col = "skyblue", main = "Subject Marks",
xlab = "Subjects", ylab = "Marks")
set.seed(123)
random_data <- rnorm(1000, mean = 0, sd = 1)
hist(random_data, prob = TRUE, col = "lightblue", main = "Bell Curve - Random Normal Distribution",
xlab = "Values", ylab = "Density")
lines(density(random_data), col = "blue", lwd = 2)
my_vector <- c(2, 4, 6, 8, 10)
sum_result <- sum(my_vector)
mean_result <- mean(my_vector)
product_result <- prod(my_vector)
cat("Vector:", my_vector, "\n")
cat("Sum:", sum_result, "\n")
cat("Mean:", mean_result, "\n")
cat("Product:", product_result, "\n")
employee_df <- data.frame(
EmployeeID = c(1, 2, 3, 4, 5),
Name = c("John Doe", "Jane Smith", "Michael Johnson", "Emily Brown", "David Lee"),
Age = c(30, 35, 28, 42, 25),
Department = c("Finance", "HR", "Marketing", "IT", "Operations"),
Salary = c(50000, 60000, 55000, 70000, 48000)
)
print("Employee Details:")
print(employee_df)
current_datetime <- Sys.time()
current_date <- as.Date(current_datetime)
cat("Current Date and Time: ", current_datetime, "\n")
cat("Current Date without Time: ", current_date, "\n")
savehistory("~/GitHub/charan/week2(main).Rhistory")
